#BlueJ class context
comment0.params=
comment0.target=void\ test_speed()
comment1.params=num
comment1.target=void\ main(int)
comment10.params=
comment10.target=void\ print_remainders()
comment11.params=a\ size
comment11.target=int\ arrayToNum(int[],\ int)
comment12.params=num\ fact1\ fact2
comment12.target=boolean\ eq1(int,\ int,\ int)
comment13.params=num\ fact1\ fact2
comment13.target=boolean\ eq2(int,\ int,\ int)
comment14.params=num\ fact1\ fact2
comment14.target=boolean\ eq3(int,\ int,\ int)
comment15.params=k
comment15.target=int[][]\ getAdditiveTable(int)
comment16.params=table\ x0\ y0
comment16.target=int[][]\ getCounterpartTable(int[][],\ int,\ int)
comment17.params=num\ digit
comment17.target=int\ getDigit(long,\ int)
comment18.params=num\ digit
comment18.target=long\ getDigitLong(long,\ int)
comment19.params=x0\ f1
comment19.target=int\ getCounterpart(int,\ int)
comment2.params=
comment2.target=void\ m_test()
comment20.params=num
comment20.target=int[][]\ getFactors(int)
comment3.params=x\ y\ n
comment3.target=int\ d(int[],\ int[],\ int)
comment4.params=x
comment4.target=void\ generate_equations(java.math.BigInteger)
comment5.params=x\ digit
comment5.target=int\ getDigit_BI(java.math.BigInteger,\ int)
comment6.params=
comment6.target=void\ test_BI()
comment7.params=
comment7.target=void\ test_eqs()
comment8.params=num\ n
comment8.target=int\ getLastNDigits(int,\ int)
comment9.params=
comment9.target=void\ print_divisors()
numComments=21
